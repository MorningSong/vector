name: Experimental Suite

on:
  push:
    branches:
      - master
  # TODO: We should never do the docker push on a PR.
  pull_request:
    branches:
        - master

env:
  VERBOSE: true
  ENVIRONMENT_UPSTREAM: docker.pkg.github.com/timberio/vector/environment:${{ github.sha }}

jobs:
  environment:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT_AUTOBUILD: true
    steps:
      - run: docker login https://docker.pkg.github.com -u hoverbear -p ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - run: make environment-prepare
      - run: docker tag docker.pkg.github.com/timberio/vector/environment docker.pkg.github.com/timberio/vector/environment:${{ github.sha }}
      - run: docker push docker.pkg.github.com/timberio/vector/environment:${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test

  bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make bench

  check-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make check-fmt

  check-generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make check-generate

  test-integration-aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-aws

  test-integration-clickhouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-clickhouse

  test-integration-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-docker

  test-integration-elasticsearch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-elasticsearch

  test-integration-gcp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-gcp

  test-integration-influxdb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-influxdb

  test-integration-kafka:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-kafka

  test-integration-loki:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-loki

  test-integration-pulsar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-pulsar

  test-integration-splunk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-${{ hashFiles('*.nix') }}
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix run -c echo "Env prep."
      - run: nix run -c make test-integration-splunk
